import java.util.* ;
import java.io.*; 
public class Solution {
    public static List<Integer> quickSort(List<Integer> arr){
         // Call the actual sorting function with appropriate indices
        quickSortHelper(arr, 0, arr.size() - 1);
        return arr;
    }

    private static void quickSortHelper(List<Integer> arr, int low, int high) {
        if (low < high) {
            int pivotIndex = partition(arr, low, high);
            quickSortHelper(arr, low, pivotIndex - 1);
            quickSortHelper(arr, pivotIndex + 1, high);
        }
    }

    private static int partition(List<Integer> arr, int low, int high) {
        int pivot = arr.get(low);
        int i = low + 1;
        int j = high;

        while (i <= j) {
            while (i <= j && arr.get(i) <= pivot) {
                i++;
            }

            while (arr.get(j) > pivot) {
                j--;
            }

            if (i < j) {
                Collections.swap(arr, i, j);
            }
        }

        Collections.swap(arr, low, j);
        return j;
    }
}