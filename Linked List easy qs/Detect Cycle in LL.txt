//detect Cycle using hashset
public static boolean detectCycle1(Node<Integer> head) {
		HashSet<Node> st = new HashSet<>();
		while(head != null) {
			if(st.contains(head)) {
				return true;
			}
			st.add(head);
			head=head.next;
		}
		return false;
	}


//using two pointer slow and fast

public static boolean detectCycle2(Node<Integer> head){
	Node<Integer> slow = head;
	Node<Integer> fast = head;
	
	while(fast.next != null && fast.next.next != null){
	fast = fast.next.next;
        slow = slow.next;
	if(slow==fast){
	return true;
		}
	}
	return false;
}