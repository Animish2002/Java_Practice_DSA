class Solution {
    static int minJumps(int[] arr) {
        int jumps = 0;  				 // initialize the jump count
        int maxReach = 0;  				 // stores the maximum reachable index from the current position
        int steps = 0; 				 	 // stores the remaining steps at the current index

        for (int i = 0; i < arr.length - 1; i++) {
            maxReach = Math.max(maxReach, i + arr[i]); 		 // update the maximum reachable index

            if (i == steps) { 				 // if we have reached the end of the steps from the previous jump
                jumps++;  				 // increment the jump count
                steps = maxReach;  			 // update the remaining steps to be taken as the maximum reachable index
            }

            if (i >= maxReach) {  			 // if we are stuck at a position with zero maximum reachable index
                return -1;  				 // unable to reach the end, return -1
            }
        }

        return jumps;  					 // return the minimum number of jumps
    }
}